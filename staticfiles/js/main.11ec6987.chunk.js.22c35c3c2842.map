{"version":3,"sources":["components/Login.js","components/CoverSlider.js","assets/next.svg","components/Home.js","hooks/useWinDims.js","components/Plot.js","assets/demo-loader.svg","components/LoadingScreen.js","components/Playlist.js","App.js","components/Root.js","index.js"],"names":["Login","handleLogin","onClick","Scene","styled","div","Carousel","CarouselCell","props","position","SwipeButtons","CoverSlider","images","selectPlaylist","ids","userInfo","useState","positions","setPositions","useEffect","Array","from","length","_","i","Math","floor","map","index","src","alt","width","height","values","array","x","handlePrev","handleNext","Home","authenticated","playlistList","url","id","to","getWindowDimensions","window","innerWidth","innerHeight","ScatterPlot","data","Xdim","Ydim","Zdim","artistsAndTitles","titles","track","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","axesStyle","tick0","tickcolor","tickwidth","gridcolor","gridwidth","zerolinecolor","zerolinewidth","config","displayModeBar","y","z","type","mode","marker","color","labels","symbol","hoverlabel","bgcolor","hoverinfo","text","layout","margin","pad","paper_bgcolor","scene","aspectmode","yaxis","xaxis","zaxis","LoadingScreen","className","LoadingAnimation","Playlist","dimensionOptions","TSNE1","TSNE2","TSNE3","acousticness","danceability","energy","instrumentalness","liveness","loudness","speechiness","tempo","valence","setData","selectedDimX","setSelectedDimX","selectedDimY","setSelectedDimY","selectedDimZ","setSelectedDimZ","XButtonTitle","setXButtonTitle","YButtonTitle","setYButtonTitle","ZButtonTitle","setZButtonTitle","location","useLocation","TSNE_features","console","log","buttonTitle","axis","undefined","style","DropdownButton","title","Object","entries","dim","value","Dropdown","Item","eventKey","selectDims","App","loading","showLoading","hideLoading","setAuthenticated","setPlaylistList","setUserInfo","history","useHistory","fetch","then","response","json","status","playlists","items","user_profile","match","useRouteMatch","playlist","find","Number","params","path","replace","playlistId","headers","push","pathname","Root","setLoading","ReactDOM","render","document","getElementById"],"mappings":"2RAaeA,EAXD,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACb,OACI,gCACI,0CAGA,wBAAQC,QAASD,EAAjB,uB,gBCJNE,GCJS,IDIDC,IAAOC,IAAV,+KAULC,EAAWF,IAAOC,IAAV,qLASRE,EAAeH,IAAOC,IAAV,yRAYd,SAACG,GAAD,qCACwBA,EAAMC,SAD9B,gCAIEC,EAAeN,IAAOC,IAAV,sLA6DHM,EAnDK,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,OAAQC,EAAoC,EAApCA,eAA0BC,GAAU,EAApBC,SAAoB,EAAVD,KAAU,EAC/BE,mBAAS,IADsB,mBAC1DC,EAD0D,KAC/CC,EAD+C,KAGjEC,qBAAU,WACRD,EAAaE,MAAMC,KAAK,CAAEC,OAAQV,EAAOU,SAAU,SAACC,EAAGC,GAAJ,OAAc,GAAJA,EAAyC,GAAhCC,KAAKC,MAAMd,EAAOU,OAAS,SAChG,CAACV,IAoBJ,OACE,gCACE,cAACT,EAAD,UACE,cAACG,EAAD,UACGW,EAAUU,KAAI,SAAClB,EAAUmB,GAAX,OACb,cAACrB,EAAD,CAAcE,SAAUA,EAAUQ,UAAWA,EAA7C,SACE,qBACEY,IAAKjB,EAAOgB,GACZE,IAAI,iBACJC,MAAM,MACNC,OAAO,MACP9B,QAAS,kBAAMW,EAAeC,EAAIc,QANuBA,UAYnE,eAAClB,EAAD,WACE,wBAAQR,QAAS,kBApCJ,SAAC+B,GAClB,GAAkB,IAAdA,EAAO,GACTf,EAAae,OACR,CACL,IAAMC,EAAQD,EAAON,KAAI,SAACQ,GAAD,OAAOA,EAAI,MACpCjB,EAAagB,IA+BYE,CAAWnB,IAAlC,kBACA,wBAAQf,QAAS,kBA5BJ,SAAC+B,GAClB,GAAkC,IAA9BA,EAAOA,EAAOX,OAAS,GACzBJ,EAAae,OACR,CACL,IAAMC,EAAQD,EAAON,KAAI,SAACQ,GAAD,OAAOA,EAAI,MACpCjB,EAAagB,IAuBYG,CAAWpB,IAAlC,yBEvEOqB,EAnBF,SAAC,GAA+D,IAA7DC,EAA4D,EAA5DA,cAAexB,EAA6C,EAA7CA,SAAUyB,EAAmC,EAAnCA,aAAc3B,EAAqB,EAArBA,eAC7CD,EAAS4B,EAAab,KAAI,SAAAQ,GAAC,OAAIA,EAAEvB,OAAO,GAAG6B,OAC3C3B,EAAM0B,EAAab,KAAI,SAAAQ,GAAC,OAAIA,EAAEO,MACpC,OAAIH,EAEI,cAAC,EAAD,CACI3B,OAAQA,EACRC,eAAgBA,EAChBE,SAAUA,EACVD,IAAKA,IAKT,cAAC,IAAD,CAAU6B,GAAG,Y,iBCfzB,SAASC,IAAuB,IAAD,EACsBC,OACnD,MAAO,CACLd,MAH2B,EACrBe,WAGNd,OAJ2B,EACFe,aCA7B,IAqDeC,EArDK,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAG/BC,EAAmBJ,EAAKK,OAAO3B,KAAI,SAAA4B,GAAK,gBAAOA,EAAM,GAAb,cAAqBA,EAAM,OAHzB,EDOrC,WAAgC,IAAD,EACIvC,mBAAS4B,KADb,mBACrCY,EADqC,KACnBC,EADmB,KAY5C,OATAtC,qBAAU,WACR,SAASuC,IACPD,EAAoBb,KAItB,OADAC,OAAOc,iBAAiB,SAAUD,GAC3B,kBAAMb,OAAOe,oBAAoB,SAAUF,MACjD,IAEIF,ECbqBK,GAAlB7B,EANwC,EAMxCA,OAAQD,EANgC,EAMhCA,MAEV+B,EAAY,CACdC,MAAO,EACPC,UAAW,UACXC,UAAW,EAEXC,UAAW,UACXC,UAAW,EAEXC,cAAe,UACfC,cAAe,GAGnB,OACI,cAAC,IAAD,CACIC,OAAQ,CAACC,gBAAgB,GACzBtB,KAAM,CACF,CACId,EAAGe,EACHsB,EAAGrB,EACHsB,EAAGrB,EACHsB,KAAM,YACNC,KAAM,UACNC,OAAQ,CAACC,MAAO5B,EAAK6B,OAAQC,OAAQ,UACrCC,WAAY,CAACC,QAAS,QACtBC,UAAW,OACXC,KAAM9B,IAGd+B,OAAS,CACLb,gBAAgB,EAChBc,OAAQ,CAACC,IAAK,IACdvD,MAAOA,EACPC,OAAQA,EACRuD,cAAe,QACfC,MAAO,CACHC,WAAY,OACZC,MAAO5B,EACP6B,MAAO7B,EACP8B,MAAO9B,OCjDZ,MAA0B,wCCS1B+B,G,MANO,kBAClB,qBAAKC,UAAU,4BAAf,SACI,wBAAQpB,KAAK,gBAAgBzB,KAAM8C,EAAnC,+B,8BC8FOC,EA1FE,WAEb,IAAMC,EAAmB,CACrBC,MAAO,CAAChE,MAAO,gBAAiBN,MAAO,GACvCuE,MAAO,CAACjE,MAAO,gBAAiBN,MAAO,GACvCwE,MAAO,CAAClE,MAAO,gBAAiBN,MAAO,GACvCyE,aAAc,CAACnE,MAAO,WAAYN,MAAO,GACzC0E,aAAc,CAACpE,MAAO,WAAYN,MAAO,GACzC2E,OAAQ,CAACrE,MAAO,WAAYN,MAAO,GACnC4E,iBAAkB,CAACtE,MAAO,WAAYN,MAAO,GAC7C6E,SAAU,CAACvE,MAAO,WAAYN,MAAO,GACrC8E,SAAU,CAACxE,MAAO,WAAYN,MAAO,GACrC+E,YAAa,CAACzE,MAAO,WAAYN,MAAO,GACxCgF,MAAO,CAAC1E,MAAO,WAAYN,MAAO,GAClCiF,QAAS,CAAC3E,MAAO,WAAYN,MAAO,IAdrB,EAuBKZ,mBAAS,IAvBd,mBAuBZiC,EAvBY,KAuBN6D,EAvBM,OAwBqB9F,mBAAS,IAxB9B,mBAwBZ+F,EAxBY,KAwBEC,EAxBF,OAyBqBhG,mBAAS,IAzB9B,mBAyBZiG,EAzBY,KAyBEC,EAzBF,OA0BqBlG,mBAAS,IA1B9B,mBA0BZmG,EA1BY,KA0BEC,EA1BF,OA4BqBpG,mBAAS,SA5B9B,mBA4BZqG,EA5BY,KA4BEC,EA5BF,OA6BqBtG,mBAAS,SA7B9B,mBA6BZuG,EA7BY,KA6BEC,EA7BF,OA8BqBxG,mBAAS,SA9B9B,mBA8BZyG,EA9BY,KA8BEC,EA9BF,KAgCbC,EAAWC,cAEjBzG,qBAAU,WACN2F,EAAQa,EAAS1E,MACjB+D,EAAgBW,EAAS1E,KAAK4E,cAAclG,KAAI,SAAAQ,GAAC,OAAIA,EAAE,OACvD+E,EAAgBS,EAAS1E,KAAK4E,cAAclG,KAAI,SAAAQ,GAAC,OAAIA,EAAE,OACvDiF,EAAgBO,EAAS1E,KAAK4E,cAAclG,KAAI,SAAAQ,GAAC,OAAIA,EAAE,OACvD2F,QAAQC,IAAIJ,EAAS1E,QACtB,CAAC0E,EAAS1E,KAAMA,IAEnB,IAaM+E,EAAc,SAACC,GACjB,MAAa,WAATA,EACOZ,EACS,WAATY,EACAV,EAEAE,GAIf,YAA2BS,IAAvBjF,EAAK4E,cAAqC,cAAC,EAAD,IAG1C,gCACI,qBAAK/B,UAAU,kBAAf,SApDK,CACT,SACA,SACA,UAkDcnE,KAAI,SAACsG,EAAMrG,GAAP,OACN,sBAAiBuG,MAAO,CAACtD,MAAO,SAAhC,UACKoD,EACD,cAACG,EAAA,EAAD,CACIC,MAAOL,EAAYC,GADvB,SAGKK,OAAOC,QAAQtC,GAAkBtE,KAAI,mCAAE6G,EAAF,KAAOC,EAAP,YAClC,8BACI,cAACC,EAAA,EAASC,KAAV,CAAeC,SAAUJ,EAAKtI,QAAS,YApCpD,SAAC+H,EAAMQ,EAAOD,GAChB,WAATP,GACAjB,EAAgB/D,EAAKwF,EAAMvG,OAAOP,KAAI,SAAAQ,GAAC,OAAIA,EAAEsG,EAAM7G,WACnD0F,EAAgBkB,IACA,WAATP,GACPf,EAAgBjE,EAAKwF,EAAMvG,OAAOP,KAAI,SAAAQ,GAAC,OAAIA,EAAEsG,EAAM7G,WACnD4F,EAAgBgB,KAEhBpB,EAAgBnE,EAAKwF,EAAMvG,OAAOP,KAAI,SAAAQ,GAAC,OAAIA,EAAEsG,EAAM7G,WACnD8F,EAAgBc,IA2BsDK,CAAWZ,EAAMQ,EAAOD,IAAtE,SAA8EA,KADxEA,UANZ5G,QAclB,cAAC,EAAD,CAAaqB,KAAMA,EAAMC,KAAM6D,EAAc5D,KAAM8D,EAAc7D,KAAM+D,QCMpE2B,G,MA5FH,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,YAAkB,EAEXjI,oBAAS,GAFE,mBAE9CuB,EAF8C,KAE/B2G,EAF+B,OAGblI,mBAAS,IAHI,mBAG9CwB,EAH8C,KAGhC2G,EAHgC,OAIrBnI,mBAAS,IAJY,mBAI9CD,EAJ8C,KAIpCqI,EAJoC,KAM/CC,EAAUC,cAEhBnI,qBAAU,WACRoI,MAAM,6BACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAvG,GACJiG,EAAiBjG,EAAK0G,QACtBV,SAGH,IAEH9H,qBAAU,WACJoB,IACFgH,MAAM,sBACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAvG,GACJkG,EAAgBlG,EAAK2G,UAAUC,UAEjCN,MAAM,yBACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAvG,GACJmG,EAAYnG,EAAK6G,cACjBb,UAIH,CAAC1G,IAEJ,IA6BMwH,EAAQC,YAAc,kBACtBC,EAAWF,EACbvH,EAAa0H,MAAK,SAAAD,GAAQ,OAAIA,EAASvH,KAAOyH,OAAOJ,EAAMK,OAAO1H,OAClE,KAEJ,OAAIqG,EAAkB,cAAC,EAAD,IAEpB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsB,KAAK,iBAAZ,SACE,cAAC,EAAD,CACE3H,GAAIuH,MAGR,cAAC,IAAD,CAAOI,KAAK,SAAZ,SACE,cAAC,EAAD,CAAOpK,YA/BO,WAClB,OACAsJ,MAAM,6BACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAvG,GACCA,EAAK0G,QACRJ,MAAM,yBACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAvG,GACJiG,GAAiB,GACjBrG,OAAO8E,SAAS2C,QAAQrH,EAAKR,gBAuBrC,cAAC,IAAD,CAAO4H,KAAK,IAAZ,SACE,cAAC,EAAD,CACE9H,cAAeA,EACfxB,SAAUA,EACVyB,aAAcA,EACd3B,eAlDc,SAAC0J,GACrBvB,IACAO,MAAM,2BAA4B,CAACiB,QAAS,CACxC,GAAMD,KAETf,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAvG,GACJoG,EAAQoB,KAAK,CAACC,SAAS,aAAD,OAAeH,GAActH,SACnDgG,iBCxBS0B,EAnBF,WAAO,IAAD,EAEe3J,oBAAS,GAFxB,mBAER+H,EAFQ,KAEC6B,EAFD,KAYf,OACI,cAAC,IAAD,UACI,cAAC,EAAD,CAAK7B,QAASA,EAASC,YAAa,kBATxC4B,GAAW,IASkD3B,YAAa,kBAL1E2B,GAAW,SCZnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.11ec6987.chunk.js","sourcesContent":["// import { Redirect } from 'react-router-dom';\n\nconst Login = ( {handleLogin} ) => {\n    return (\n        <div>\n            <h1>\n                Welcome!\n            </h1>\n            <button onClick={handleLogin}>Login</button>\n        </div>\n    )\n}\n\nexport default Login","import styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\nimport NextIcon from '../assets/next.svg'\n\nconst Scene = styled.div`\n  width: 300px;\n  height: 300px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 15%;\n  position: relative;\n  perspective: 500px;\n`;\n\nconst Carousel = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  transform: translateZ(-1714px);\n  transform-style: preserve-3d;\n  transition: transform 1s;\n`;\n\nconst CarouselCell = styled.div`\n  background-color: lightblue;\n  position: absolute;\n  width: 250px;\n  height: 250px;\n  border: 2px solid black;\n  line-height: 150px;\n  font-size: 80px;\n  font-weight: bold;\n  color: black;\n  text-align: center;\n  transition: all 1s;\n  ${(props) =>\n    `{ transform: rotateY(${props.position}deg) translateZ(1714px);}`}\n`;\n\nconst SwipeButtons = styled.div`\n  position: absolute;\n  background-color: black;\n  padding: 20px;\n  text-align: center;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`\n  \nconst CoverSlider = ({ images, selectPlaylist, userInfo, ids }) => {\n  const [positions, setPositions] = useState([]);\n  \n  useEffect(() => {\n    setPositions(Array.from({ length: images.length }, (_, i) => i * 10 - Math.floor(images.length / 2) * 10))\n  }, [images])\n\n  const handlePrev = (values) => {\n    if (values[0] === 0) {\n      setPositions(values);\n    } else {\n      const array = values.map((x) => x + 10);\n      setPositions(array);\n    }\n  };\n\n  const handleNext = (values) => {\n    if (values[values.length - 1] === 0) {\n      setPositions(values);\n    } else {\n      const array = values.map((x) => x - 10);\n      setPositions(array);\n    }\n  };\n\n  return (\n    <div>\n      <Scene>\n        <Carousel>\n          {positions.map((position, index) => (\n            <CarouselCell position={position} positions={positions} key={index}>\n              <img \n                src={images[index]}\n                alt=\"Playlist cover\" \n                width=\"250\"\n                height=\"250\"\n                onClick={() => selectPlaylist(ids[index])}\n              />\n            </CarouselCell>\n          ))}\n        </Carousel>\n      </Scene>\n      <SwipeButtons>\n        <button onClick={() => handlePrev(positions)}>prev</button>\n        <button onClick={() => handleNext(positions)}>next</button>\n      </SwipeButtons>\n    </div>\n  );\n  \n};\n\nexport default CoverSlider;\n","export default __webpack_public_path__ + \"static/media/next.eb3051a2.svg\";","import { Redirect } from 'react-router-dom';\nimport CoverSlider from './CoverSlider';\n\nconst Home = ({ authenticated, userInfo, playlistList, selectPlaylist }) => {\n    const images = playlistList.map(x => x.images[0].url)\n    const ids = playlistList.map(x => x.id)\n    if (authenticated) {\n        return(\n            <CoverSlider\n                images={images} \n                selectPlaylist={selectPlaylist} \n                userInfo={userInfo}\n                ids={ids}\n            />\n        )\n    } else {\n        return (\n            <Redirect to='/login'/>\n        )\n    }\n}\n\nexport default Home","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}","import Plot from 'react-plotly.js';\nimport useWindowDimensions from '../hooks/useWinDims'\n\nconst ScatterPlot = ( {data, Xdim, Ydim, Zdim} ) => {\n\n    // first item in tuple in data.titles is the song name, the second item is the artist\n    const artistsAndTitles = data.titles.map(track => `${track[0]} - ${track[1]}`)\n\n    // use custom hook to retrieve fullscreen measurements\n    const { height, width } = useWindowDimensions()\n\n    const axesStyle = {\n        tick0: 0,\n        tickcolor: \"#D3D3D3\",\n        tickwidth: 2,\n        \n        gridcolor: \"#D3D3D3\",\n        gridwidth: 2,\n        \n        zerolinecolor: \"#D3D3D3\",\n        zerolinewidth: 2\n    }\n\n    return (\n        <Plot\n            config={{displayModeBar: false}}\n            data={[\n                {\n                    x: Xdim,\n                    y: Ydim,\n                    z: Zdim,\n                    type: 'scatter3d',\n                    mode: 'markers',\n                    marker: {color: data.labels, symbol: 'circle'},\n                    hoverlabel: {bgcolor: 'grey'},\n                    hoverinfo: 'text',\n                    text: artistsAndTitles,\n                }\n            ]}\n            layout={ {\n                displayModeBar: false,\n                margin: {pad: 20},\n                width: width, \n                height: height,\n                paper_bgcolor: 'black',\n                scene: {\n                    aspectmode: 'auto',\n                    yaxis: axesStyle,\n                    xaxis: axesStyle,\n                    zaxis: axesStyle\n                }\n            } }\n        />\n    )\n}\n\nexport default ScatterPlot","export default __webpack_public_path__ + \"static/media/demo-loader.67b2533e.svg\";","import LoadingAnimation from '../assets/demo-loader.svg'\nimport './LoadingScreen.css'\n\nconst LoadingScreen = () => (\n    <div className='loadingAnimationContainer'>\n        <object type=\"image/svg+xml\" data={LoadingAnimation}>svg-animation</object>\n    </div>\n)\n\nexport default LoadingScreen","import { useLocation } from 'react-router-dom';\nimport React, { useState, useEffect } from \"react\";\nimport ScatterPlot from './Plot';\nimport LoadingScreen from './LoadingScreen'\nimport './Playlist.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown'\n\nconst Playlist = () => {\n\n    const dimensionOptions = {\n        TSNE1: {array: 'TSNE_features', index: 0},\n        TSNE2: {array: 'TSNE_features', index: 1},\n        TSNE3: {array: 'TSNE_features', index: 2},\n        acousticness: {array: 'features', index: 0},\n        danceability: {array: 'features', index: 1},\n        energy: {array: 'features', index: 2},\n        instrumentalness: {array: 'features', index: 3},\n        liveness: {array: 'features', index: 4},\n        loudness: {array: 'features', index: 5},\n        speechiness: {array: 'features', index: 6},\n        tempo: {array: 'features', index: 7},\n        valence: {array: 'features', index: 8}\n    }\n\n    const axes = [\n        'X axis',\n        'Y axis',\n        'Z axis'\n    ]\n\n    const [data, setData] = useState([])\n    const [selectedDimX, setSelectedDimX] = useState([])\n    const [selectedDimY, setSelectedDimY] = useState([])\n    const [selectedDimZ, setSelectedDimZ] = useState([])\n\n    const [XButtonTitle, setXButtonTitle] = useState('TSNE1')\n    const [YButtonTitle, setYButtonTitle] = useState('TSNE2')\n    const [ZButtonTitle, setZButtonTitle] = useState('TSNE3')\n\n    const location = useLocation();\n\n    useEffect(() => {\n        setData(location.data)\n        setSelectedDimX(location.data.TSNE_features.map(x => x[0]))\n        setSelectedDimY(location.data.TSNE_features.map(x => x[1]))\n        setSelectedDimZ(location.data.TSNE_features.map(x => x[2]))\n        console.log(location.data)\n    }, [location.data, data])\n\n    const selectDims = (axis, value, dim) => {\n        if (axis === 'X axis') {\n            setSelectedDimX(data[value.array].map(x => x[value.index]))\n            setXButtonTitle(dim)\n        } else if (axis === 'Y axis') {\n            setSelectedDimY(data[value.array].map(x => x[value.index]))\n            setYButtonTitle(dim)\n        } else {\n            setSelectedDimZ(data[value.array].map(x => x[value.index]))\n            setZButtonTitle(dim)\n        }\n    }\n\n    const buttonTitle = (axis) => {\n        if (axis === 'X axis') {\n            return XButtonTitle\n        } else if (axis === 'Y axis') {\n            return YButtonTitle\n        } else {\n            return ZButtonTitle\n        }\n    }\n\n    if (data.TSNE_features === undefined) {return <LoadingScreen/>}\n    \n    return(\n        <div>\n            <div className='buttonContainer'>\n                {axes.map((axis, index) => (\n                    <div key={index} style={{color: 'white'}}>\n                        {axis}\n                        <DropdownButton\n                            title={buttonTitle(axis)}\n                        >\n                            {Object.entries(dimensionOptions).map(([dim, value]) =>\n                                <div key={dim}>\n                                    <Dropdown.Item eventKey={dim} onClick={() => {selectDims(axis, value, dim)}}>{dim}</Dropdown.Item>\n                                </div>\n                            )}\n                        </DropdownButton>\n                    </div>\n                ))}\n            </div>\n            <ScatterPlot data={data} Xdim={selectedDimX} Ydim={selectedDimY} Zdim={selectedDimZ}/>\n        </div>\n    )\n}\n\nexport default Playlist","import { Switch, Route, useRouteMatch, useHistory } from 'react-router-dom';\nimport Login from './components/Login'\nimport Home from './components/Home'\nimport Playlist from './components/Playlist'\nimport LoadingScreen from './components/LoadingScreen'\nimport React, { useState, useEffect } from \"react\";\nimport './App.css'\n\nconst App = ({ loading, showLoading, hideLoading }) => {\n\n  const [authenticated, setAuthenticated] = useState(false)\n  const [playlistList, setPlaylistList] = useState([])\n  const [userInfo, setUserInfo] = useState({})\n\n  const history = useHistory()\n\n  useEffect(() => {\n    fetch('/spotify/is-authenticated')\n      .then(response => response.json())\n      .then(data => {\n        setAuthenticated(data.status)\n        hideLoading()\n      })\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    if (authenticated) {\n      fetch('/spotify/playlists')\n      .then(response => response.json())\n      .then(data => {\n        setPlaylistList(data.playlists.items)\n      })\n      fetch('/spotify/user-profile')\n      .then(response => response.json())\n      .then(data => {\n        setUserInfo(data.user_profile)\n        hideLoading()\n      })\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [authenticated])\n\n  const fetchPlaylist = (playlistId) => {  \n    showLoading()\n    fetch('/spotify/get-tracks-data', {headers: {\n        'id': playlistId\n    }})\n    .then(response => response.json())\n    .then(data => {\n      history.push({pathname: `playlists/${playlistId}`, data})\n      hideLoading()\n    })\n  }\n\n  const handleLogin = () => {  \n    return(\n    fetch('/spotify/is-authenticated')\n      .then(response => response.json())\n      .then(data => {\n        if (!data.status) {\n          fetch('/spotify/get-auth-url')\n            .then(response => response.json())\n            .then(data => {\n              setAuthenticated(true)\n              window.location.replace(data.url)\n            })\n        }\n      })\n    )\n  }\n\n  const match = useRouteMatch('/playlists/:id')\n  const playlist = match\n    ? playlistList.find(playlist => playlist.id === Number(match.params.id))\n    : null\n\n  if (loading) { return <LoadingScreen/> }\n  return (\n    <Switch>\n      <Route path='/playlists/:id'>\n        <Playlist \n          id={playlist} \n        />\n      </Route>\n      <Route path='/login'>\n        <Login handleLogin={handleLogin} />\n      </Route>\n      <Route path='/'>\n        <Home\n          authenticated={authenticated}\n          userInfo={userInfo}\n          playlistList={playlistList}\n          selectPlaylist={fetchPlaylist}\n        />\n      </Route>\n    </Switch>\n  )\n}\n\nexport default App;","import {\n    BrowserRouter as Router\n  } from \"react-router-dom\";\nimport App from '../App';\nimport { useState } from 'react';\n\n// To get a loading screen between routes, I needed to lift the loading state to a HOC\n\nconst Root = () => {\n\n    const [loading, setLoading] = useState(true)\n\n    const showLoading = () => (\n        setLoading(true)\n    )\n\n    const hideLoading = () => (\n        setLoading(false)\n    )\n\n    return(\n        <Router>\n            <App loading={loading} showLoading={() => showLoading()} hideLoading={() => hideLoading()}/>\n        </Router>\n    )\n}\n\nexport default Root","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './components/Root'\n\nReactDOM.render(\n  <Root/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}